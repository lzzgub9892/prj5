package com.woniu.entity;

import java.util.ArrayList;
import java.util.List;

public class HouseExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public HouseExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andHidIsNull() {
			addCriterion("hid is null");
			return (Criteria) this;
		}

		public Criteria andHidIsNotNull() {
			addCriterion("hid is not null");
			return (Criteria) this;
		}

		public Criteria andHidEqualTo(Integer value) {
			addCriterion("hid =", value, "hid");
			return (Criteria) this;
		}

		public Criteria andHidNotEqualTo(Integer value) {
			addCriterion("hid <>", value, "hid");
			return (Criteria) this;
		}

		public Criteria andHidGreaterThan(Integer value) {
			addCriterion("hid >", value, "hid");
			return (Criteria) this;
		}

		public Criteria andHidGreaterThanOrEqualTo(Integer value) {
			addCriterion("hid >=", value, "hid");
			return (Criteria) this;
		}

		public Criteria andHidLessThan(Integer value) {
			addCriterion("hid <", value, "hid");
			return (Criteria) this;
		}

		public Criteria andHidLessThanOrEqualTo(Integer value) {
			addCriterion("hid <=", value, "hid");
			return (Criteria) this;
		}

		public Criteria andHidIn(List<Integer> values) {
			addCriterion("hid in", values, "hid");
			return (Criteria) this;
		}

		public Criteria andHidNotIn(List<Integer> values) {
			addCriterion("hid not in", values, "hid");
			return (Criteria) this;
		}

		public Criteria andHidBetween(Integer value1, Integer value2) {
			addCriterion("hid between", value1, value2, "hid");
			return (Criteria) this;
		}

		public Criteria andHidNotBetween(Integer value1, Integer value2) {
			addCriterion("hid not between", value1, value2, "hid");
			return (Criteria) this;
		}

		public Criteria andHnameIsNull() {
			addCriterion("hname is null");
			return (Criteria) this;
		}

		public Criteria andHnameIsNotNull() {
			addCriterion("hname is not null");
			return (Criteria) this;
		}

		public Criteria andHnameEqualTo(String value) {
			addCriterion("hname =", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameNotEqualTo(String value) {
			addCriterion("hname <>", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameGreaterThan(String value) {
			addCriterion("hname >", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameGreaterThanOrEqualTo(String value) {
			addCriterion("hname >=", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameLessThan(String value) {
			addCriterion("hname <", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameLessThanOrEqualTo(String value) {
			addCriterion("hname <=", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameLike(String value) {
			addCriterion("hname like", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameNotLike(String value) {
			addCriterion("hname not like", value, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameIn(List<String> values) {
			addCriterion("hname in", values, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameNotIn(List<String> values) {
			addCriterion("hname not in", values, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameBetween(String value1, String value2) {
			addCriterion("hname between", value1, value2, "hname");
			return (Criteria) this;
		}

		public Criteria andHnameNotBetween(String value1, String value2) {
			addCriterion("hname not between", value1, value2, "hname");
			return (Criteria) this;
		}

		public Criteria andCidIsNull() {
			addCriterion("cid is null");
			return (Criteria) this;
		}

		public Criteria andCidIsNotNull() {
			addCriterion("cid is not null");
			return (Criteria) this;
		}

		public Criteria andCidEqualTo(Integer value) {
			addCriterion("cid =", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotEqualTo(Integer value) {
			addCriterion("cid <>", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThan(Integer value) {
			addCriterion("cid >", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThanOrEqualTo(Integer value) {
			addCriterion("cid >=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThan(Integer value) {
			addCriterion("cid <", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThanOrEqualTo(Integer value) {
			addCriterion("cid <=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidIn(List<Integer> values) {
			addCriterion("cid in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotIn(List<Integer> values) {
			addCriterion("cid not in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidBetween(Integer value1, Integer value2) {
			addCriterion("cid between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotBetween(Integer value1, Integer value2) {
			addCriterion("cid not between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andLidIsNull() {
			addCriterion("lid is null");
			return (Criteria) this;
		}

		public Criteria andLidIsNotNull() {
			addCriterion("lid is not null");
			return (Criteria) this;
		}

		public Criteria andLidEqualTo(Integer value) {
			addCriterion("lid =", value, "lid");
			return (Criteria) this;
		}

		public Criteria andLidNotEqualTo(Integer value) {
			addCriterion("lid <>", value, "lid");
			return (Criteria) this;
		}

		public Criteria andLidGreaterThan(Integer value) {
			addCriterion("lid >", value, "lid");
			return (Criteria) this;
		}

		public Criteria andLidGreaterThanOrEqualTo(Integer value) {
			addCriterion("lid >=", value, "lid");
			return (Criteria) this;
		}

		public Criteria andLidLessThan(Integer value) {
			addCriterion("lid <", value, "lid");
			return (Criteria) this;
		}

		public Criteria andLidLessThanOrEqualTo(Integer value) {
			addCriterion("lid <=", value, "lid");
			return (Criteria) this;
		}

		public Criteria andLidIn(List<Integer> values) {
			addCriterion("lid in", values, "lid");
			return (Criteria) this;
		}

		public Criteria andLidNotIn(List<Integer> values) {
			addCriterion("lid not in", values, "lid");
			return (Criteria) this;
		}

		public Criteria andLidBetween(Integer value1, Integer value2) {
			addCriterion("lid between", value1, value2, "lid");
			return (Criteria) this;
		}

		public Criteria andLidNotBetween(Integer value1, Integer value2) {
			addCriterion("lid not between", value1, value2, "lid");
			return (Criteria) this;
		}

		public Criteria andOidIsNull() {
			addCriterion("oid is null");
			return (Criteria) this;
		}

		public Criteria andOidIsNotNull() {
			addCriterion("oid is not null");
			return (Criteria) this;
		}

		public Criteria andOidEqualTo(Integer value) {
			addCriterion("oid =", value, "oid");
			return (Criteria) this;
		}

		public Criteria andOidNotEqualTo(Integer value) {
			addCriterion("oid <>", value, "oid");
			return (Criteria) this;
		}

		public Criteria andOidGreaterThan(Integer value) {
			addCriterion("oid >", value, "oid");
			return (Criteria) this;
		}

		public Criteria andOidGreaterThanOrEqualTo(Integer value) {
			addCriterion("oid >=", value, "oid");
			return (Criteria) this;
		}

		public Criteria andOidLessThan(Integer value) {
			addCriterion("oid <", value, "oid");
			return (Criteria) this;
		}

		public Criteria andOidLessThanOrEqualTo(Integer value) {
			addCriterion("oid <=", value, "oid");
			return (Criteria) this;
		}

		public Criteria andOidIn(List<Integer> values) {
			addCriterion("oid in", values, "oid");
			return (Criteria) this;
		}

		public Criteria andOidNotIn(List<Integer> values) {
			addCriterion("oid not in", values, "oid");
			return (Criteria) this;
		}

		public Criteria andOidBetween(Integer value1, Integer value2) {
			addCriterion("oid between", value1, value2, "oid");
			return (Criteria) this;
		}

		public Criteria andOidNotBetween(Integer value1, Integer value2) {
			addCriterion("oid not between", value1, value2, "oid");
			return (Criteria) this;
		}

		public Criteria andRidIsNull() {
			addCriterion("rid is null");
			return (Criteria) this;
		}

		public Criteria andRidIsNotNull() {
			addCriterion("rid is not null");
			return (Criteria) this;
		}

		public Criteria andRidEqualTo(Integer value) {
			addCriterion("rid =", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidNotEqualTo(Integer value) {
			addCriterion("rid <>", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidGreaterThan(Integer value) {
			addCriterion("rid >", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidGreaterThanOrEqualTo(Integer value) {
			addCriterion("rid >=", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidLessThan(Integer value) {
			addCriterion("rid <", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidLessThanOrEqualTo(Integer value) {
			addCriterion("rid <=", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidIn(List<Integer> values) {
			addCriterion("rid in", values, "rid");
			return (Criteria) this;
		}

		public Criteria andRidNotIn(List<Integer> values) {
			addCriterion("rid not in", values, "rid");
			return (Criteria) this;
		}

		public Criteria andRidBetween(Integer value1, Integer value2) {
			addCriterion("rid between", value1, value2, "rid");
			return (Criteria) this;
		}

		public Criteria andRidNotBetween(Integer value1, Integer value2) {
			addCriterion("rid not between", value1, value2, "rid");
			return (Criteria) this;
		}

		public Criteria andDidIsNull() {
			addCriterion("did is null");
			return (Criteria) this;
		}

		public Criteria andDidIsNotNull() {
			addCriterion("did is not null");
			return (Criteria) this;
		}

		public Criteria andDidEqualTo(Integer value) {
			addCriterion("did =", value, "did");
			return (Criteria) this;
		}

		public Criteria andDidNotEqualTo(Integer value) {
			addCriterion("did <>", value, "did");
			return (Criteria) this;
		}

		public Criteria andDidGreaterThan(Integer value) {
			addCriterion("did >", value, "did");
			return (Criteria) this;
		}

		public Criteria andDidGreaterThanOrEqualTo(Integer value) {
			addCriterion("did >=", value, "did");
			return (Criteria) this;
		}

		public Criteria andDidLessThan(Integer value) {
			addCriterion("did <", value, "did");
			return (Criteria) this;
		}

		public Criteria andDidLessThanOrEqualTo(Integer value) {
			addCriterion("did <=", value, "did");
			return (Criteria) this;
		}

		public Criteria andDidIn(List<Integer> values) {
			addCriterion("did in", values, "did");
			return (Criteria) this;
		}

		public Criteria andDidNotIn(List<Integer> values) {
			addCriterion("did not in", values, "did");
			return (Criteria) this;
		}

		public Criteria andDidBetween(Integer value1, Integer value2) {
			addCriterion("did between", value1, value2, "did");
			return (Criteria) this;
		}

		public Criteria andDidNotBetween(Integer value1, Integer value2) {
			addCriterion("did not between", value1, value2, "did");
			return (Criteria) this;
		}

		public Criteria andZidIsNull() {
			addCriterion("zid is null");
			return (Criteria) this;
		}

		public Criteria andZidIsNotNull() {
			addCriterion("zid is not null");
			return (Criteria) this;
		}

		public Criteria andZidEqualTo(Integer value) {
			addCriterion("zid =", value, "zid");
			return (Criteria) this;
		}

		public Criteria andZidNotEqualTo(Integer value) {
			addCriterion("zid <>", value, "zid");
			return (Criteria) this;
		}

		public Criteria andZidGreaterThan(Integer value) {
			addCriterion("zid >", value, "zid");
			return (Criteria) this;
		}

		public Criteria andZidGreaterThanOrEqualTo(Integer value) {
			addCriterion("zid >=", value, "zid");
			return (Criteria) this;
		}

		public Criteria andZidLessThan(Integer value) {
			addCriterion("zid <", value, "zid");
			return (Criteria) this;
		}

		public Criteria andZidLessThanOrEqualTo(Integer value) {
			addCriterion("zid <=", value, "zid");
			return (Criteria) this;
		}

		public Criteria andZidIn(List<Integer> values) {
			addCriterion("zid in", values, "zid");
			return (Criteria) this;
		}

		public Criteria andZidNotIn(List<Integer> values) {
			addCriterion("zid not in", values, "zid");
			return (Criteria) this;
		}

		public Criteria andZidBetween(Integer value1, Integer value2) {
			addCriterion("zid between", value1, value2, "zid");
			return (Criteria) this;
		}

		public Criteria andZidNotBetween(Integer value1, Integer value2) {
			addCriterion("zid not between", value1, value2, "zid");
			return (Criteria) this;
		}

		public Criteria andBidIsNull() {
			addCriterion("bid is null");
			return (Criteria) this;
		}

		public Criteria andBidIsNotNull() {
			addCriterion("bid is not null");
			return (Criteria) this;
		}

		public Criteria andBidEqualTo(Integer value) {
			addCriterion("bid =", value, "bid");
			return (Criteria) this;
		}

		public Criteria andBidNotEqualTo(Integer value) {
			addCriterion("bid <>", value, "bid");
			return (Criteria) this;
		}

		public Criteria andBidGreaterThan(Integer value) {
			addCriterion("bid >", value, "bid");
			return (Criteria) this;
		}

		public Criteria andBidGreaterThanOrEqualTo(Integer value) {
			addCriterion("bid >=", value, "bid");
			return (Criteria) this;
		}

		public Criteria andBidLessThan(Integer value) {
			addCriterion("bid <", value, "bid");
			return (Criteria) this;
		}

		public Criteria andBidLessThanOrEqualTo(Integer value) {
			addCriterion("bid <=", value, "bid");
			return (Criteria) this;
		}

		public Criteria andBidIn(List<Integer> values) {
			addCriterion("bid in", values, "bid");
			return (Criteria) this;
		}

		public Criteria andBidNotIn(List<Integer> values) {
			addCriterion("bid not in", values, "bid");
			return (Criteria) this;
		}

		public Criteria andBidBetween(Integer value1, Integer value2) {
			addCriterion("bid between", value1, value2, "bid");
			return (Criteria) this;
		}

		public Criteria andBidNotBetween(Integer value1, Integer value2) {
			addCriterion("bid not between", value1, value2, "bid");
			return (Criteria) this;
		}

		public Criteria andLnidIsNull() {
			addCriterion("lnid is null");
			return (Criteria) this;
		}

		public Criteria andLnidIsNotNull() {
			addCriterion("lnid is not null");
			return (Criteria) this;
		}

		public Criteria andLnidEqualTo(Integer value) {
			addCriterion("lnid =", value, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidNotEqualTo(Integer value) {
			addCriterion("lnid <>", value, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidGreaterThan(Integer value) {
			addCriterion("lnid >", value, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidGreaterThanOrEqualTo(Integer value) {
			addCriterion("lnid >=", value, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidLessThan(Integer value) {
			addCriterion("lnid <", value, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidLessThanOrEqualTo(Integer value) {
			addCriterion("lnid <=", value, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidIn(List<Integer> values) {
			addCriterion("lnid in", values, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidNotIn(List<Integer> values) {
			addCriterion("lnid not in", values, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidBetween(Integer value1, Integer value2) {
			addCriterion("lnid between", value1, value2, "lnid");
			return (Criteria) this;
		}

		public Criteria andLnidNotBetween(Integer value1, Integer value2) {
			addCriterion("lnid not between", value1, value2, "lnid");
			return (Criteria) this;
		}

		public Criteria andBsidIsNull() {
			addCriterion("bsid is null");
			return (Criteria) this;
		}

		public Criteria andBsidIsNotNull() {
			addCriterion("bsid is not null");
			return (Criteria) this;
		}

		public Criteria andBsidEqualTo(Integer value) {
			addCriterion("bsid =", value, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidNotEqualTo(Integer value) {
			addCriterion("bsid <>", value, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidGreaterThan(Integer value) {
			addCriterion("bsid >", value, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidGreaterThanOrEqualTo(Integer value) {
			addCriterion("bsid >=", value, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidLessThan(Integer value) {
			addCriterion("bsid <", value, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidLessThanOrEqualTo(Integer value) {
			addCriterion("bsid <=", value, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidIn(List<Integer> values) {
			addCriterion("bsid in", values, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidNotIn(List<Integer> values) {
			addCriterion("bsid not in", values, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidBetween(Integer value1, Integer value2) {
			addCriterion("bsid between", value1, value2, "bsid");
			return (Criteria) this;
		}

		public Criteria andBsidNotBetween(Integer value1, Integer value2) {
			addCriterion("bsid not between", value1, value2, "bsid");
			return (Criteria) this;
		}

		public Criteria andGidIsNull() {
			addCriterion("gid is null");
			return (Criteria) this;
		}

		public Criteria andGidIsNotNull() {
			addCriterion("gid is not null");
			return (Criteria) this;
		}

		public Criteria andGidEqualTo(Integer value) {
			addCriterion("gid =", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidNotEqualTo(Integer value) {
			addCriterion("gid <>", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidGreaterThan(Integer value) {
			addCriterion("gid >", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidGreaterThanOrEqualTo(Integer value) {
			addCriterion("gid >=", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidLessThan(Integer value) {
			addCriterion("gid <", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidLessThanOrEqualTo(Integer value) {
			addCriterion("gid <=", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidIn(List<Integer> values) {
			addCriterion("gid in", values, "gid");
			return (Criteria) this;
		}

		public Criteria andGidNotIn(List<Integer> values) {
			addCriterion("gid not in", values, "gid");
			return (Criteria) this;
		}

		public Criteria andGidBetween(Integer value1, Integer value2) {
			addCriterion("gid between", value1, value2, "gid");
			return (Criteria) this;
		}

		public Criteria andGidNotBetween(Integer value1, Integer value2) {
			addCriterion("gid not between", value1, value2, "gid");
			return (Criteria) this;
		}

		public Criteria andLocationIsNull() {
			addCriterion("location is null");
			return (Criteria) this;
		}

		public Criteria andLocationIsNotNull() {
			addCriterion("location is not null");
			return (Criteria) this;
		}

		public Criteria andLocationEqualTo(String value) {
			addCriterion("location =", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotEqualTo(String value) {
			addCriterion("location <>", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationGreaterThan(String value) {
			addCriterion("location >", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationGreaterThanOrEqualTo(String value) {
			addCriterion("location >=", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationLessThan(String value) {
			addCriterion("location <", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationLessThanOrEqualTo(String value) {
			addCriterion("location <=", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationLike(String value) {
			addCriterion("location like", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotLike(String value) {
			addCriterion("location not like", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationIn(List<String> values) {
			addCriterion("location in", values, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotIn(List<String> values) {
			addCriterion("location not in", values, "location");
			return (Criteria) this;
		}

		public Criteria andLocationBetween(String value1, String value2) {
			addCriterion("location between", value1, value2, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotBetween(String value1, String value2) {
			addCriterion("location not between", value1, value2, "location");
			return (Criteria) this;
		}

		public Criteria andHousedrawingIsNull() {
			addCriterion("housedrawing is null");
			return (Criteria) this;
		}

		public Criteria andHousedrawingIsNotNull() {
			addCriterion("housedrawing is not null");
			return (Criteria) this;
		}

		public Criteria andHousedrawingEqualTo(String value) {
			addCriterion("housedrawing =", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingNotEqualTo(String value) {
			addCriterion("housedrawing <>", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingGreaterThan(String value) {
			addCriterion("housedrawing >", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingGreaterThanOrEqualTo(String value) {
			addCriterion("housedrawing >=", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingLessThan(String value) {
			addCriterion("housedrawing <", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingLessThanOrEqualTo(String value) {
			addCriterion("housedrawing <=", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingLike(String value) {
			addCriterion("housedrawing like", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingNotLike(String value) {
			addCriterion("housedrawing not like", value, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingIn(List<String> values) {
			addCriterion("housedrawing in", values, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingNotIn(List<String> values) {
			addCriterion("housedrawing not in", values, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingBetween(String value1, String value2) {
			addCriterion("housedrawing between", value1, value2, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousedrawingNotBetween(String value1, String value2) {
			addCriterion("housedrawing not between", value1, value2, "housedrawing");
			return (Criteria) this;
		}

		public Criteria andHousestatusidIsNull() {
			addCriterion("housestatusid is null");
			return (Criteria) this;
		}

		public Criteria andHousestatusidIsNotNull() {
			addCriterion("housestatusid is not null");
			return (Criteria) this;
		}

		public Criteria andHousestatusidEqualTo(Integer value) {
			addCriterion("housestatusid =", value, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidNotEqualTo(Integer value) {
			addCriterion("housestatusid <>", value, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidGreaterThan(Integer value) {
			addCriterion("housestatusid >", value, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidGreaterThanOrEqualTo(Integer value) {
			addCriterion("housestatusid >=", value, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidLessThan(Integer value) {
			addCriterion("housestatusid <", value, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidLessThanOrEqualTo(Integer value) {
			addCriterion("housestatusid <=", value, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidIn(List<Integer> values) {
			addCriterion("housestatusid in", values, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidNotIn(List<Integer> values) {
			addCriterion("housestatusid not in", values, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidBetween(Integer value1, Integer value2) {
			addCriterion("housestatusid between", value1, value2, "housestatusid");
			return (Criteria) this;
		}

		public Criteria andHousestatusidNotBetween(Integer value1, Integer value2) {
			addCriterion("housestatusid not between", value1, value2, "housestatusid");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table house
	 * @mbg.generated  Mon Aug 19 16:10:36 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table house
     *
     * @mbg.generated do_not_delete_during_merge Mon Aug 19 15:45:31 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}